version: '3.7'

services:
  app:
    build:
      context: .
      target: app-dev
      args:
        COMPOSER_AUTH: "{}"
        APP_BASE_DIR: ${APP_BASE_DIR-.}
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - lb-authentication
    volumes:
      - ${APP_BASE_DIR-.}:/app

  web:
    build:
      context: .
      target: web-dev
      args:
        APP_BASE_DIR: ${APP_BASE_DIR-.}
    restart: unless-stopped
    ports:
      - "8337:8080"
    environment:
      PHP_FPM_HOST: app
    volumes:
      - ${APP_BASE_DIR-.}/public:/app/public
    labels:
      traefik.enable: "true"
      traefik.docker.network: lb-local
      traefik.http.routers.authentication-api.tls: "true"
      traefik.http.routers.authentication-api.rule: HostRegexp(`authentication.local.lb`)
      traefik.http.services.authentication-api.loadbalancer.server.port: 8080
    networks:
      - lb-local
      - lb-authentication
    depends_on:
      - app

  db:
    image: mysql:8
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password' ]
    environment:
      - MYSQL_ROOT_PASSWORD=authentication
      - MYSQL_DATABASE=authentication
    restart: always
    ports:
      - "3337:3306"
    networks:
      - lb-authentication
    healthcheck:
      test: [ "CMD-SHELL", "mysql -h 127.0.0.1 -uroot -p$$MYSQL_ROOT_PASSWORD -e \"SELECT 1\" $$MYSQL_DATABASE &> /dev/null" ]
      interval: 30s
      timeout: 30s
      retries: 3

  mb:
    image: rabbitmq:management-alpine
    networks:
      - lb-authentication
    ports:
      - "15672:15672"

networks:
  lb-authentication: ~
  lb-local:
    external: true
